{"version":3,"sources":["submitform.js","todoItem.js","border.js","initialData.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitForm","props","useState","description","setDescription","deadline","setDeadline","completed","editMode","type","value","onChange","e","target","console","log","style","fontSize","margin","onClick","generatedId","JSON","stringify","Date","setShifts","prev","concat","id","padding","ToDoItem","className","textDecoration","shift","display","filter","item","Border","children","DataFetching","AddInitialData","useCallback","fetch","then","res","json","result","map","useEffect","App","shifts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bd4bcce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst SubmitForm = (props) => {\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [deadline, setDeadline] = useState(\"\");\r\n\r\n  const [completed, setCompleted] = useState(\"\");\r\n\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const [editMode, setEditMode] = useState(\"\");\r\n\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n    console.log(\"description\", description);\r\n  };\r\n\r\n  const onChangeDeadline = (e) => {\r\n    setDeadline(e.target.value);\r\n    console.log(\"deadline\", deadline);\r\n  };\r\n\r\n  const UpdateForm = () => {\r\n    let generatedId = JSON.stringify(new Date());\r\n    props.setShifts((prev) =>\r\n      prev.concat({\r\n        description: description,\r\n        deadline: deadline,\r\n        completed: completed,\r\n        id: generatedId,\r\n        editMode: editMode,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Todo description\r\n      <input type=\"text\" value={description} onChange={onChangeDescription} style={{fontSize:'20px',margin:'20px'}}/>\r\n      <br></br>\r\n      deadline\r\n      <input type=\"date\" value={deadline} onChange={onChangeDeadline} style={{fontSize:'20px',margin:'80px'}}/>\r\n      <br></br>\r\n      <button onClick={UpdateForm} style={{margin:'8px',padding:'10px',fontSize:'20px'}}>Add todo</button>\r\n    </div>\r\n  );\r\n};\r\nexport default SubmitForm;\r\n","import React from 'react'\r\n\r\nconst ToDoItem = (props) => {\r\n\r\n  const selectCheckBox = () => {\r\n    console.log('selectCheckBox');\r\n    console.log(props.shift.completed)\r\n    props.shift.completed = !props.shift.completed;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const editTodo = (value) => {\r\n    console.log('editTodo');\r\n    console.log(value);\r\n    props.shift.description = value;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const onDelete = () => {\r\n    props.setShifts(prev => prev.filter((item) => item.id !== props.shift.id))\r\n  }\r\n\r\n  const onEdit = () => {\r\n    console.log('onEdit');\r\n    console.log(props.shift.editMode)\r\n    props.shift.editMode = true;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  const onUpdate = () => {\r\n    console.log('onUpdate');\r\n    console.log(props.shift.editMode)\r\n    props.shift.editMode = false;\r\n    props.setShifts(prev => prev.filter((item) => item))\r\n  }\r\n\r\n  return (\r\n    <li className='myList'>\r\n\r\n      <label style={{\r\n        textDecoration: props.shift.completed ? \"line-through\" : null,\r\n        display: !props.shift.editMode ? \"inline-block\" : \"none\"\r\n      }} >\r\n        {props.shift.description} &nbsp; | &nbsp;\r\n        {props.shift.deadline}\r\n        &nbsp;\r\n      </label>\r\n\r\n      <input type=\"text\" style={{ display: props.shift.editMode ? \"inline-block\" : \"none\" }} value={props.shift.description}\r\n        onChange={(e) => editTodo(e.target.value)}></input>\r\n\r\n      <input type=\"checkbox\" onClick={(e) => {\r\n        selectCheckBox(e);\r\n      }} />\r\n\r\n      <button onClick={onDelete}>Delete</button>\r\n      <button style={{ display: !props.shift.editMode ? \"inline-block\" : \"none\" }} onClick={onEdit}>Edit</button>\r\n      <button style={{ display: props.shift.editMode ? \"inline-block\" : \"none\" }} onClick={onUpdate}>Update</button>\r\n    </li>\r\n\r\n\r\n  )\r\n}\r\nexport default ToDoItem;\r\n","import React from 'react'\r\n\r\nconst Border = (props) => {\r\n    const {children} = props\r\n\r\n    return (\r\n        <div className='blackBorder'>\r\n            {children}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Border","import React, { useEffect, useCallback } from \"react\";\r\n\r\nconst DataFetching = (props) => {\r\n\r\n    const apiUrl = 'https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw';\r\n\r\n    const AddInitialData = useCallback(() => {\r\n        //let setIsLoading=true\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n\r\n                result.map((shift) => {\r\n                    console.log(shift);\r\n                   \r\n                       props.setShifts((prev) =>\r\n                        prev.concat({\r\n                            description: shift.description,\r\n                            deadline: shift.deadline,\r\n                            completed: false,\r\n                            id: shift.id,\r\n                            editMode: false\r\n                        \r\n                        })\r\n                    );\r\n                });\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        AddInitialData()\r\n    }, [AddInitialData])\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n        </>\r\n    ) \r\n}\r\nexport default DataFetching;","//import logo from './logo.svg';\r\nimport React, { useState } from \"react\";\r\nimport SubmitForm from \"./submitform\";\r\nimport ToDoItem from \"./todoItem\";\r\nimport Border from \"./border\";\r\nimport InitialData from \"./initialData\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [shifts, setShifts] = useState([]);\r\n  console.log(shifts);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Todolist</h1>\r\n        <SubmitForm setShifts={setShifts} shifts={shifts} />\r\n        <InitialData setShifts={setShifts} shifts={shifts} />\r\n        {shifts.map((shift) => {\r\n          return (\r\n            <div>\r\n              <Border>\r\n                <ToDoItem setShifts={setShifts} shift={shift} />\r\n              </Border>\r\n            </div>\r\n          );\r\n        })}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}